= form_with model: trainee, id: dom_id(trainee), class: "trainee-info",
            html: {autocomplete: "off"}, data: {controller: "form-submission"} do |f|
  = hidden_field_tag :trainees, @party.to_json
  .trainee-info-top
    // Left section, with artwork, text inputs etc. at full size
    .species-info
      .nickname-species.side-by-side
        .input-field.nickname
          = f.label :nickname, "Nickname"
          = f.text_field :nickname, class: "counter", maxlength: 12, disabled: not_yours?(trainee),
                         data: {length: 12, action: "blur->form-submission#submit"},
                         onblur: "hideCounter();", value: trainee.nickname
        .input-field.species
          = f.label :species, "Species"
          = f.text_field :species, class: "autocomplete", disabled: not_yours?(trainee),
                         data: {action: "change->form-submission#submit"},
              value: trainee.species.nil? ? nil : trainee.species.display_name
      .trainee-artwork{id: "artwork-#{dom_id trainee}"}
        = render "trainees/artwork", trainee: trainee
      .side-by-side
        .input-field
          = f.select :nature,
              options_for_select([@nil_nature_option] + @nature_options,
                disabled: @nil_nature_option,
                selected: @nature_options.find { |o| o.last == trainee.nature } || @nil_nature_option),
              {}, {data: {action: "change->form-submission#submit"}, disabled: not_yours?(trainee)}
          = f.label :nature, "Nature"
        .input-field
          = f.label :level, "Level"
          = f.text_field :level, class: "validate", type: "number", **maxlength(3),
                         min: 1, max: 100, value: trainee.level, disabled: not_yours?(trainee),
                         data: {action: "change->form-submission#submit"}

    // Right section, with stat chart, Pokérus switch, types etc.
    .ev-info
      .sprite-and-types
        %div{id: "mobile-sprite-#{dom_id trainee}"}
          - if trainee.species
            = trainee.species.sprite
        .trainee-types{id: "types-#{dom_id trainee}"}
          - if trainee.species
            = trainee.species.type_badges size: :large
      .corner-buttons
        - if yours?(trainee)
          = link_to "#delete-modal-#{dom_id trainee}", id: "delete-#{dom_id trainee}", class: "delete-btn modal-trigger" do
            %i.material-icons delete
        - if @party.size > 1
          = link_to multi_trainees_path(@party - [trainee]), id: "close-#{dom_id trainee}" do
            %i.material-icons close
      #stats-chart
        = render "shared/radar_chart", stats: trainee.evs, id: "radar-chart-#{dom_id trainee}"
      - PokeLog::Stats.stats.each do |stat|
        .point{class: stat}
          - attr_name = "#{stat}_ev"
          = f.text_field attr_name.to_sym, **maxlength(3, "setEvInputColor()"),
              style: "border-color: #{trainee.evs.values.inject(:+) == 510 ? 'green' : 'black'}",
              class: "ev-input", type: "number", placeholder: 0, min: 0, max: 255,
              value: ((v = trainee.send(attr_name)).zero? ? nil : v),
              data: {action: "input->form-submission#searchSubmit"}, disabled: not_yours?(trainee)
      .pokerus.switch{class: not_yours?(trainee) ? "disabled" : ""}
        %label
          = f.check_box :pokerus, value: trainee.pokerus, disabled: not_yours?(trainee),
                                  data: {action: "input->form-submission#submit"}
          %span.lever
          Pokérus

  // Items Menu
  %ul.collapsible.items-menu
    %li
      .collapsible-header
        .held-items
          %label
            = f.radio_button :item, nil, value: trainee.item.nil?, disabled: not_yours?(trainee),
                                         data: {action: "click->form-submission#submit"}
            %span No Item
          - @items_options.each do |item|
            %label
              = f.radio_button :item, item, value: trainee.item == item,
                                      disabled: not_yours?(trainee),
                                      data: {action: "click->form-submission#submit"}
              %span.tooltipped{data: {tooltip: item_tooltip(item), position: "top"}}
                = image_tag "/images/items/held/#{item}.png"
                = item.titleize
        - if yours?(trainee)
          %i.material-icons.expand more_vert
      - if yours?(trainee)
        .collapsible-body.consumables.row
          .col.s4
            %h5 Vitamins
            .consumables-buttons
              - PokeLog::Stats.stats.each do |stat|
                %a.waves-effect.waves-light.btn
                  .stat-label= format_stat stat
                  - item = PokeLog::Stats.consumables_for(stat)[:vitamin]
                  = image_tag "/images/items/vitamins/#{item}.png"
                  .item-name= item.to_s.gsub("_", " ")
          .col.s4.middle
            %h5 Feathers
            .consumables-buttons
              - PokeLog::Stats.stats.each do |stat|
                %a.waves-effect.waves-light.btn
                  .stat-label= format_stat stat
                  - item = PokeLog::Stats.consumables_for(stat)[:feather]
                  = image_tag "/images/items/feathers/#{item}.png"
                  .item-name= item
          .col.s4
            %h5 Berries
            .consumables-buttons
              - PokeLog::Stats.stats.each do |stat|
                %a.waves-effect.waves-light.btn
                  .stat-label= format_stat stat
                  - item = PokeLog::Stats.consumables_for(stat)[:berry]
                  = image_tag "/images/items/berries/#{item}.png"
                  .item-name= item

// Each trainee has its own modal to delete it. The footer is a
// form that sends a DELETE request for the trainee
- if yours?(trainee)
  .modal{id: "delete-modal-#{dom_id trainee}"}
    .modal-content
      %h4 Confirm delete
      %p Are you sure? This will delete #{trainee.title} permanently.
    .modal-footer
      = form_with model: trainee, method: :delete, data: {turbo: false} do |f|
        %a#cancel-delete.modal-close.waves-effect.waves-teal.btn-flat Cancel
        = f.submit "Delete", id: "confirm-delete",
            class: "modal-close waves-effect waves-teal btn-flat"
